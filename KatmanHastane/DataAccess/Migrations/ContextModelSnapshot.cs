// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityLayer.Hastane", b =>
                {
                    b.Property<int>("hastane_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("hastane_ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hastane_sehir")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hastane_id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("EntityLayer.Login", b =>
                {
                    b.Property<int>("login_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("login_ID");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EntityLayer.Personel", b =>
                {
                    b.Property<int>("personel_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("hastane_id")
                        .HasColumnType("int");

                    b.Property<string>("personel_Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personel_Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("poliklinik_ID")
                        .HasColumnType("int");

                    b.HasKey("personel_ID");

                    b.HasIndex("hastane_id");

                    b.HasIndex("poliklinik_ID");

                    b.ToTable("Personals");
                });

            modelBuilder.Entity("EntityLayer.Poliklinik", b =>
                {
                    b.Property<int>("poliklinik_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("poliklinik_Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("poliklinik_ID");

                    b.ToTable("Policlinics");
                });

            modelBuilder.Entity("EntityLayer.Personel", b =>
                {
                    b.HasOne("EntityLayer.Hastane", "hastane")
                        .WithMany("Personeller")
                        .HasForeignKey("hastane_id");

                    b.HasOne("EntityLayer.Poliklinik", "poliklinik")
                        .WithMany("Personel")
                        .HasForeignKey("poliklinik_ID");

                    b.Navigation("hastane");

                    b.Navigation("poliklinik");
                });

            modelBuilder.Entity("EntityLayer.Hastane", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("EntityLayer.Poliklinik", b =>
                {
                    b.Navigation("Personel");
                });
#pragma warning restore 612, 618
        }
    }
}
